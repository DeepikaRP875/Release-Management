name: Generate Release Notes

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Get current version
        id: version
        run: |
          # Get the latest tag and increment the version number
          latest_tag=$(git describe --tags --abbrev=0)
          echo "Latest tag: $latest_tag"
          
          # Parse the current version and increment the patch version
          IFS='.' read -r -a version_parts <<< "${latest_tag//v/}"
          patch_version=$((version_parts[2] + 1))
          new_version="v${version_parts[0]}.${version_parts[1]}.$patch_version"
          
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Create new Git tag
        run: |
          git tag -a ${{ env.new_version }} -m "Release version ${{ env.new_version }}"
          git push origin ${{ env.new_version }}

      - name: Generate release notes
        id: release-notes
        run: |
          # Use GitHub CLI to generate release notes between versions
          gh release create ${{ env.new_version }} \
            --title "Release ${env.new_version}" \
            --notes "What's Changed\n\n$(git log --oneline ${{ steps.version.outputs.latest_tag }}..HEAD --pretty=format:'%s by @%an in # %h')" \
            --generate-notes

      - name: Publish Release
        run: |
          # Publish the release using GitHub CLI
          gh release edit ${{ env.new_version }} --notes "$(cat release-notes.txt)"