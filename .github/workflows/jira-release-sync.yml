name: Create Release Tag and Generate Release Notes

on:
  push:
    branches:
      - main

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Calculate new tag
        id: calculate_new_tag
        run: |
          if [ -z "${{ steps.get_latest_tag.outputs.latest_tag }}" ]; then
            new_tag="v1.0.0"
          else
            latest_tag=${{ steps.get_latest_tag.outputs.latest_tag }}
            IFS='.' read -r -a tag_parts <<< "$latest_tag"
            tag_parts[2]=$((tag_parts[2] + 1))
            new_tag="${tag_parts[0]}.${tag_parts[1]}.${tag_parts[2]}"
          fi
          echo "::set-output name=new_tag::$new_tag"

      - name: Create new tag
        run: |
          git tag ${{ steps.calculate_new_tag.outputs.new_tag }}
          git push origin ${{ steps.calculate_new_tag.outputs.new_tag }}

      - name: Generate release notes
        id: generate_release_notes
        uses: actions/github-script@v6
        with:
          script: |
            const latestTag = '${{ steps.calculate_new_tag.outputs.new_tag }}';
            const previousTag = '${{ steps.get_latest_tag.outputs.latest_tag }}';
            const { data: commits } = await github.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: previousTag,
              head: 'main'
            });
            const releaseNotes = commits.commits.map(commit => `- ${commit.commit.message}`).join('\n');
            return releaseNotes;
          result-encoding: string

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.calculate_new_tag.outputs.new_tag }}
          release_name: Release ${{ steps.calculate_new_tag.outputs.new_tag }}
          body: ${{ steps.generate_release_notes.outputs.result }}
          draft: false
          prerelease: false